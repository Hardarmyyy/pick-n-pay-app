# Use an official Node.js runtime as a parent image
FROM node:20-alpine

# Set the working directory in the container
WORKDIR /usr/src/app

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install app dependencies
RUN npm install

RUN npm install pm2 -g

# Copy only the necessary files, excluding the 'node_modules' directory
COPY . .

RUN pm2 update

# Set args and environment variable 
ARG SALT
ARG PORT
ARG MONGODB_URI
ARG EXPIRY_KEY_EMAIL
ARG EXPIRY_KEY_ACCESS
ARG EXPIRY_KEY_REFRESH
ARG EXPIRY_KEY_RESET
ARG SESSION_SECRET
ARG VERIFY_EMAIL_TOKEN_SECRET
ARG ACCESS_TOKEN_SECRET
ARG REFRESH_TOKEN_SECRET
ARG RESET_PASSWORD_TOKEN_SECRET
ARG SMTP_HOST
ARG SMTP_PORT
ARG SMTP_SERVICE
ARG SMTP_MAIL
ARG SMTP_PASSWORD
ARG GOOGLESPREADSHEETID
ARG FRONTEND_URL
ARG CLOUDINARY_NAME
ARG CLOUDINARY_API_KEY
ARG CLOUDINARY_API_SECRET

ENV SALT=${SALT}
ENV PORT=${PORT}
ENV MONGODB_URI=${MONGODB_URI}
ENV EXPIRY_KEY_EMAIL=${EXPIRY_KEY_EMAIL}
ENV EXPIRY_KEY_ACCESS=${EXPIRY_KEY_ACCESS}
ENV EXPIRY_KEY_REFRESH=${EXPIRY_KEY_REFRESH}
ENV EXPIRY_KEY_RESET=${EXPIRY_KEY_RESET}
ENV SESSION_SECRET=${SESSION_SECRET}
ENV VERIFY_EMAIL_TOKEN_SECRET=${VERIFY_EMAIL_TOKEN_SECRET}
ENV ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
ENV REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
ENV RESET_PASSWORD_TOKEN_SECRET=${RESET_PASSWORD_TOKEN_SECRET}
ENV SMTP_HOST=${SMTP_HOST}
ENV SMTP_PORT=${SMTP_PORT}
ENV SMTP_SERVICE=${SMTP_SERVICE}
ENV SMTP_MAIL=${SMTP_MAIL}
ENV SMTP_PASSWORD=${SMTP_PASSWORD}
ENV GOOGLESPREADSHEETID=${GOOGLESPREADSHEETID}
ENV FRONTEND_URL=${FRONTEND_URL}
ENV CLOUDINARY_NAME=${CLOUDINARY_NAME}
ENV CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
ENV CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}


# Make port available to the world outside this container
EXPOSE $PORT

# Run the command
CMD ["pm2-runtime", "ecosystem.config.js"]
