version: "3.7"

services:

  # Frontend
  CLIENT:
    build:
      context: ./CLIENT 
      dockerfile: Dockerfile
    image: hardarmyyy/picknpay_client
    container_name: picknpay-client-container
    restart: always
    networks:
      - app-network
    env_file:
      - .env.production
    ports:
      - "5173:5173"
    environment:
      - "VITE_API_URI=${VITE_API_URI}" # EX. "VAR_NAME=value"
    depends_on:
      - server
    volumes:
      - client-data:/usr/src/app/data  # Mount a volume for persisting data on the server 

  # Server
  server:
    build:
      context: ./SERVER # This specifies the directory where the server dockerfile will be running
      dockerfile: Dockerfile
    image: hardarmyyy/picknpay_server
    container_name: picknpay-server-container
    restart: always
    networks:
      - app-network
    env_file:
      - .env.production # ensure to point the path to the env file
    ports:
      - "${PORT}:${PORT}"  # container will be exposed to the outside on this port
    environment:
      - "SALT=${SALT}"
      - "PORT=${PORT}"
      - "MONGODB_URI=${MONGODB_URI}" # EX. "VAR_NAME=value"
      - "EXPIRY_KEY_EMAIL=${EXPIRY_KEY_EMAIL}"
      - "EXPIRY_KEY_ACCESS=${EXPIRY_KEY_ACCESS}"
      - "EXPIRY_KEY_REFRESH=${EXPIRY_KEY_REFRESH}"
      - "EXPIRY_KEY_RESET=${EXPIRY_KEY_RESET}"
      - "SESSION_SECRET=${SESSION_SECRET}"
      - "VERIFY_EMAIL_TOKEN_SECRET=${VERIFY_EMAIL_TOKEN_SECRET}"
      - "ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}"
      - "REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}"
      - "RESET_PASSWORD_TOKEN_SECRET=${RESET_PASSWORD_TOKEN_SECRET}"
      - "SMTP_HOST=${SMTP_HOST}"
      - "SMTP_PORT=${SMTP_PORT}"
      - "SMTP_SERVICE=${SMTP_SERVICE}"
      - "SMTP_MAIL=${SMTP_MAIL}"
      - "SMTP_PASSWORD=${SMTP_PASSWORD}"
      - "GOOGLESPREADSHEETID=${GOOGLESPREADSHEETID}"
      - "FRONTEND_URL=${FRONTEND_URL}"
    depends_on:
      - mongo
    volumes:
      - server-data:/usr/src/app/data  # Mount a volume for persisting data on the server 


  # MongoDB
  mongo:
    image: mongo:latest
    container_name: picknpay-database-container
    restart: always
    networks:
      - app-network
    volumes:
      - mongo:/data/db  # # Mount a volume for persisting data on the db

networks:
  app-network:
    driver: bridge

volumes:
  mongo: {}
  client-data: {}
  server-data: {}

